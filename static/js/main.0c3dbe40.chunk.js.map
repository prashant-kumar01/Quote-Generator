{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","loading","setLoading","dark","setMode","quotes","setQuotes","useEffect","getQuotes","fetch","then","res","json","data","randomNum","Math","floor","random","length","setTimeout","className","class","type","onChange","color","size","text","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAqDeA,MAjDf,WAAgB,IAAD,EACcC,oBAAS,GADvB,mBACNC,EADM,KACEC,EADF,OAEUF,oBAAS,GAFnB,mBAENG,EAFM,KAEDC,EAFC,OAGeJ,mBAAS,IAHxB,mBAGNK,EAHM,KAGEC,EAHF,KAKbC,qBAAU,WACRC,MACC,IAEH,IAAMA,EAAY,WAChBC,MAAM,+BACLC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,IAAIC,EAAYC,KAAKC,MAAMD,KAAKE,SAAWJ,EAAKK,QAChDZ,EAAUO,EAAKC,IACfZ,GAAW,GACbiB,YAAW,WACTjB,GAAW,KACX,SAKJ,OACE,sBAAKkB,UAAWjB,EAAO,YAAY,QAAnC,UACE,sBAAKiB,UAAU,MAAf,UACCjB,EAAK,mBAAGkB,MAAM,mBAAsB,mBAAGA,MAAM,8BACxC,wBAAOD,UAAU,SAAjB,UACA,uBAAOE,KAAK,WACZC,SAAU,kBAAInB,GAASD,MAEvB,sBAAMiB,UAAU,oBAErBjB,EAAK,mBAAGkB,MAAM,wBAA2B,mBAAGA,MAAM,uBAEnD,qBAAKD,UAAWjB,EAAK,eAAe,cAApC,SACE,sBAAKiB,UAAWjB,EAAK,MAAM,OAA3B,UAECF,EAAQ,qBAAKmB,UAAU,SAAf,SAAwB,cAAC,IAAD,CAAYI,MAAO,QAASvB,SAAS,EAAMwB,KAAM,OAAY,8BAC7FpB,EAAOqB,OAER,wBAAQC,QAASnB,EAAjB,gCCjCOoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0c3dbe40.chunk.js","sourcesContent":["import React,{useState , useEffect} from 'react';\nimport './App.css';\nimport SyncLoader from 'react-spinners/SyncLoader';\n\nfunction App() {\n  const [loading,setLoading]=useState(false);\n  const [dark,setMode] = useState(false);\n  const [quotes, setQuotes] = useState(\"\");\n\n  useEffect(() => {\n    getQuotes();\n  }, []);\n\n  const getQuotes = () => {\n    fetch(\"https://type.fit/api/quotes\")\n    .then((res) => res.json())\n    .then((data) => {\n      let randomNum = Math.floor(Math.random() * data.length);\n      setQuotes(data[randomNum]);\n      setLoading(true);\n    setTimeout(()=>{\n      setLoading(false);\n    },2000);\n    })\n    \n  }\n\n  return (\n    <div className={dark ? \"dark-mode\":\"light\"}>\n      <div className=\"nav\">\n      {dark?<i class=\"fas fa-sun abc\"></i>:<i class=\"fas fa-sun abc pqr rotate\"></i>}\n            <label className=\"switch\">\n            <input type=\"checkbox\"\n            onChange={()=>setMode(!dark)}\n              />\n            <span className=\"slider round\"></span>\n            </label>\n      {dark?<i class=\"fas fa-moon abc pqr\"></i>:<i class=\"fas fa-moon abc\"></i>}\n      </div>\n      <div className={dark?\"raat content\":\"din content\"}>\n        <div className={dark?\"box\":\"box1\"}>\n\n        {loading?<div className=\"Loader\"><SyncLoader color={'white'} loading={true} size={20}/></div>:<div>\n        {quotes.text}\n      </div>}\n        <button onClick={getQuotes}>New Quote</button>\n    </div>\n    \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}